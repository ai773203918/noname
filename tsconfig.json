{
	// "include": [
	// 	"noname"
	// ],
	"exclude": ["dist", "node_modules", "character", "card", "extension"],
	"compilerOptions": {
		"target": "ESNext" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,
		"lib": ["dom", "WebWorker", "ESNext"],
		"module": "ESNext" /* Specify what module code is generated. */,
		// "rootDir": "./",                                  /* Specify the root folder within your source files. */
		"moduleResolution": "Bundler" /* Specify how TypeScript looks up a file from a given module specifier. */,
		// "baseUrl": "./" /* Specify the base directory to resolve non-relative module names. */,
		"paths": {
			"@/*": ["./noname/*"],
			"@noname": ["./noname.js"]
		},
		"typeRoots": ["./typings", "./node_modules/@types", "./extension/**", "./extension/**/typings"],
		"resolveJsonModule": true /* Enable importing .json files */,
		"allowJs": true /* Allow JavaScript files to be a part of your program. Use the `checkJS` option to get errors from these files. */,
		"allowImportingTsExtensions": true,
		"checkJs": true /* Enable error reporting in type-checked JavaScript files. */,
		"noEmit": true,
		"esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables `allowSyntheticDefaultImports` for type compatibility. */,
		"forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,
		"strict": true /* Enable all strict type-checking options. */,
		"noImplicitAny": false /* Enable error reporting for expressions and declarations with an implied `any` type.. */,
		"strictBindCallApply": true /* Check that the arguments for `bind`, `call`, and `apply` methods match the original function. */,
		"strictPropertyInitialization": false /* Check for class properties that are declared but not set in the constructor. */,
		"ignoreDeprecations": "5.0",
	}
}
